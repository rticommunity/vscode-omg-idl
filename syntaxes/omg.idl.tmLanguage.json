{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "OMG IDL",
    "patterns": [
        {"include": "#module_dcl"},
        {"include": "#block_comments"},
        {"include": "#annotation_comment"},
        {"include": "#single_line_comments"},
        {"include": "#annotation_appl"},
        {"include": "#type_dcl"},
        {"include": "#const_dcl"},
        {"include": "#value_dcl"},
        {"include": "#annotation_appl"}
    ],
    "repository": {
        "block_comments": {
            "name": "comment.block.omg.idl",
            "begin": "/\\*",
            "end": "\\*/",
            "captures": [
                {
                    "0": { "name": "comment.block.omg.idl"}
                }
            ],
            "patterns": [
                {
                    "name": "constant.character.escape.omg.idl",
                    "match": "\\\\."
                }
            ]
        },
        "single_line_comments": {
            "name": "comment.single.omg.idl",
            "begin": "//",
            "end": "$",
            "captures": [
                {
                    "0": { "name": "comment.line.double-slash"}
                }
            ],
            "patterns": [
                {
                    "name": "constant.character.escape.omg.idl",
                    "match": "\\\\."
                }
            ]
        },
        "module_dcl": {
            "name": "meta.module.omg.idl",
            "begin": "\\s*(module)\\s+(\\w+)\\s*(\\{)",
            "end": "\\}",
            "beginCaptures": {
                "1": { "name": "keyword.control.omg.idl"},
                "2": { "name": "entity.name.type.omg.idl"}
            },
            "patterns": [
                {"include": "#module_dcl"},
                {"include": "#block_comments"},
                {"include": "#annotation_comment"},
                {"include": "#single_line_comments"},
                {"include": "#annotation_appl"},
                {"include": "#type_dcl"},
                {"include": "#const_dcl"},
                {"include": "#value_dcl"}
            ]
        },
        "const_dcl": {
            "name": "meta.declaration.const.omg.idl",
            "begin": "(const)\\s+(\\w+)(\\:\\:\\w+)*\\s+(\\w+)\\s*=",
            "end": ";",
            "beginCaptures": {
                "1": { "name": "storage.modifier.const.omg.idl"},
                "2": {
                    "patterns": [
                        {"include": "#const_type"}
                    ] 
                },
                "3": {},
                "4": {"name": "entity.name.omg.idl"}
            },
            "patterns": [
                {
                    "name": "constant.numeric.omg.idl",
                    "match": "\\d+" 
                },
                {"include": "#string_literal"}
            ]
        },
        "const_type": {
            "patterns": [
                {"include": "#integer_type"},
                {"include": "#floating_pt_type"},
                {"include": "#fixed_pt_const_type"},
                {"include": "#char_type"},
                {"include": "#wide_char_type"},
                {"include": "#boolean_type"},
                {"include": "#octet_type"},
                {"include": "#string_type"},
                {"include": "#string_type_unbounded"}
            ]
        },
        "literal": {
            "patterns": [
                {"include": "#integer_literal"},
                {"include": "#floating_pt_literal"},
                {"include": "#fixed_pt_literal"},
                {"include": "#character_literal"},
                {"include": "#wide_character_literal"},
                {"include": "#boolean_literal"},
                {"include": "#string_literal"}
            ]
        },
        "integer_literal": {
            "patterns": [{
                "name": "constant.numeric.omg.idl",
                "match": "\\b(\\d+|0x\\h+)\\b"
            }]
        },
        "boolean_literal": {
            "patterns": [{
                "name": "constant.language.omg.idl",
                "match": "\\b(TRUE|FALSE)\\b"
            }]
        },
        "positive_int_const": {
            "patterns": [{
                "name": "constant.numeric.omg.idl",
                "match": "(\\d+)"
            }]
        },
        "string_literal": {
            "name": "string.quoted.double.omg.idl",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.omg.idl",
                    "match": "\\\\."
                }
            ]
        },
        "type_dcl": {
            "patterns": [
                {"include": "#constr_type_dcl"},
                {"include": "#typedef_dcl"},
                {"include": "#interface_def"},
                {"include": "#interface_forward_dcl"},
                {"include": "#except_dcl"}
            ]
        },
        "type_spec": {
            "patterns": [
                {"include": "#simple_type_spec"}
            ]
        },
        "simple_type_spec": {
            "patterns": [
                {"include": "#base_type_spec"},
                {"include": "#template_type_spec"}
            ]
        },
        "base_type_spec": {
            "patterns": [
                {"include": "#integer_type"},
                {"include": "#floating_pt_type"},
                {"include": "#char_type"},
                {"include": "#wide_char_type"},
                {"include": "#boolean_type"},
                {"include": "#octet_type"}
            ]
        },
        "floating_pt_type": {
            "patterns": [
                {
                    "name": "storage.type.primitive.omg.idl",
                    "match": "\\b(float|double|long double)\\b"
                }
            ]
        },
        "integer_type": {
            "patterns": [
                {"include": "#signed_int"},
                {"include": "#unsigned_int"}
            ]
        },
        "signed_int": {
            "patterns": [
                {"include": "#signed_short_int"},
                {"include": "#signed_long_int"},
                {"include": "#signed_longlong_int"},
                {"include": "#signed_tiny_int"}
            ]
        },
        "signed_short_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(short|int16)\\b"
            }]
        },
        "signed_long_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(long|int32)\\b"
            }]
        },
        "signed_longlong_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(long long|int64)\\b"
            }]
        },
        "signed_tiny_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(int8)\\b"
            }]
        },
        "unsigned_int": {
            "patterns": [
                {"include": "#unsigned_short_int"},
                {"include": "#unsigned_long_int"},
                {"include": "#unsigned_longlong_int"},
                {"include": "#unsigned_tiny_int"}
            ]
        },
        "unsigned_short_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(unsigned short|uint16)\\b"
            }]
        },
        "unsigned_long_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(unsigned long|uint32)\\b"
            }]
        },
        "unsigned_longlong_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(unsigned long long|uint64)\\b"
            }]
        },
        "unsigned_tiny_int": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(uint8)\\b"
            }]
        },
        "char_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(char)\\b"
            }]
        }, 
        "wide_char_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(wchar)\\b"
            }]
        },
        "boolean_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(boolean)\\b"
            }]
        },
        "octet_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(octet)\\b"
            }]
        },
        "template_type_spec": {
            "patterns": [
                {"include": "#sequence_type"},
                {"include": "#string_type"},
                {"include": "#string_type_unbounded"},
                {"include": "#fixed_pt_type"}
            ]
        },
        "sequence_type": {
            "name": "meta.storage.sequence.omg.idl",
            "begin": "\\b(sequence)<",
            "end": ">",
            "beginCaptures": {
                "1": {"name": "storage.type.sequence.omg.idl"}
            },
            "patterns": [
                {"include": "#type_spec"},
                {"include": "#positive_int_const"}
            ]
        },
        "string_type_unbounded": {
            "patterns": [{
                "name": "storage.type.string.omg.idl",
                "match": "\\b(w{0,1}string)\\b"
            }]
        },
        "string_type": {
            "name": "meta.storage.string.omg.idl",
            "begin": "\\b(w{0,1}string)<",
            "end": ">",
            "beginCaptures": {
                "1": {"name": "storage.type.string.omg.idl"}
            },
            "patterns": [
                {"include": "#positive_int_const"}
            ]
        },
        "fixed_pt_type": {
            "name": "meta.storage.fixed.point.omg.idl",
            "begin": "(fixed\\s*)<(\\d+)\\s*\\,\\s*(\\d+)",
            "end": ">",
            "beginCaptures": {
                "1": {"name": "storage.type.fixed.point.omg.idl"},
                "2": {
                    "patterns": [{"include": "#positive_int_const"}]
                },
                "3": {
                    "patterns": [{"include": "#positive_int_const"}]
                }
            },
            "patterns": []
        },
        "fixed_pt_const_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(fixed)\\b"
            }]
        },
        "constr_type_dcl": {
            "patterns": [
                {"include": "#struct_dcl"},
                {"include": "#union_dcl"},
                {"include": "#enum_dcl"}
            ]
        },
        "struct_dcl": {
            "patterns": [{
                "include": "#struct_def"
            }]
        },
        "struct_def": {
            "name": "meta.storage.struct.omg.idl",
            "begin": "(struct)\\s+(\\w+)\\s*((\\:)\\s+(\\w+)){0,1}\\s*(\\{)*",
            "end": "\\}",
            "beginCaptures": {
                "1": {"name": "storage.type.class.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"},
                "5": {"name": "entity.name.type.omg.idl"}
            },
            "patterns": [
                {"include": "#member"},
                {"include": "#single_line_comments"},
                {"include": "#block_comments"}
            ]
        },
        "member": {
            "patterns" : [
                {"include": "#annotation_comment"},
                {"include": "#type_spec"},
                {"include": "#declarator"}
            ]
        },
        "declarator": {
            "patterns": [
                {"include": "#type_declarator"},
                {"include": "#array_declarator"}
            ]
        },
        "union_dcl": {
            "patterns" : [
                {"include": "#union_def"},
                {"include": "#union_forward_dcl"}
            ]
        },
        "union_def": {
            "name": "meta.storage.union.omg.idl",
            "begin": "(union)\\s+(\\w+)\\s+(switch)\\s*\\((\\w+)\\)\\s*\\{",
            "end": "\\};",
            "beginCaptures": {
                "1": {"name": "storage.type.union.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"},
                "3": {"name": "keyword.control.omg.idl"},
                "4": {"name": "variable.parameter.omg.idl"}
            },
            "patterns": [
                {"include": "#annotation_comment"},
                {"include": "#single_line_comments"},
                {"include": "#block_comments"},
                {"include": "#switch_body"}
            ]
        },
        "switch_body": {
            "patterns": [
                {"include": "#case_label"},
                {"include": "#element_spec"},
                {"include": "#annotation_comment"}

            ]
        },
        "case_label": {
            "name": "meta.storage.union.case.omg.idl",
            "begin": "\\b(case|default)\\b",
            "end": ":",
            "beginCaptures": {
                "1": {"name": "keyword.control.omg.idl"}
            },
            "patterns": [
                {"include": "#boolean_literal"},
                {
                    "name": "constant.numeric.omg.idl",
                    "match": "\\b(\\d+)\\b"
                }
            ]
        },
        "element_spec": {
            "patterns": [
                {"include": "#type_spec"},
                {"include": "#declarator"}
            ]
        },
        "union_forward_dcl": {
            "patterns": [
                {
                    "match": "(union)",
                    "name": "storage.type.union.omg.idl"
                }
            ]
        },
        "enum_dcl": {
            "name": "meta.enum.omg.idl",
            "begin": "\\b(enum)\\b\\s+(\\w+)\\s*\\{",
            "end": "}",
            "beginCaptures": {
                "1": {"name": "storage.type.enum.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"}
            },
            "patterns": [
                {"include": "#enumerator"}
            ]
        },
        "enumerator": {
            "patterns": [
                {"include": "#annotation_appl"},
                {"include": "#integer_literal"},
                {"include": "#identifier"},
                {"include": "#block_comments"},
                {"include": "#single_line_comments"},
                {"include": "#annotation_comment"}
            ]
        },
        "array_declarator": {
            "name": "meta.array.omg.idl",
            "begin": "(\\w+){0,1}(\\[)(\\d+)",
            "end": "(\\])",
            "beginCaptures": {
                "1": {"name": "variable.field.omg.idl"},
                "2": {"name": "punctuation.definition.bracket.omg.idl"},
                "3": {"name": "constant.numeric.omg.idl"}
            },
            "endCaptures": {
                "1": {"name": "punctuation.definition.bracket.omg.idl"}
            },
            "patterns": [
                {"include": "#fixed_array_size"}
            ]
        },
        "fixed_array_size": {
            "name": "meta.array_size.omg.idl",
            "begin": "(\\[)(\\d+)",
            "end": "(\\])",
            "beginCaptures": {
                "1": {"name": "punctuation.definition.bracket.omg.idl"},
                "2": {"name": "constant.numeric.omg.idl"}
            },
            "endCaptures": {
                "1": {"name": "punctuation.definition.bracket.omg.idl"}
            },
            "patterns": []
        },
        "typedef_dcl": {
            "name": "meta.typedef.omg.idl",
            "begin": "\\b(typedef)\\b",
            "end": "$",
            "beginCaptures": {
                "1": {"name": "storage.type.typedef.omg.idl"}
            },
            "patterns": [
                {"include": "#type_declarator"},
                {"include": "#annotation_comment"}
            ]

        },
        "type_declarator": {
            "patterns": [
                {"include": "#annotation_appl"},
                {"include": "#simple_type_spec"},
                {"include": "#array_declarator"},
                {"include": "#template_type_spec"},
                {"include": "#declarator_name"}
            ]
        },
        "declarator_name":
        {
            "name": "meta.variable.field.omg.idl",
            "match": "\\b(\\w+)\\s*;",
            "captures": {
                "1": {"name": "variable.field.omg.idl"}
            }
        },
        "value_dcl": {
            "patterns": [
                {"include": "#value_def"},
                {"include": "#value_forward_dcl"}
            ]
        },
        "value_def": {
            "name": "meta.valuetype.omg.idl",
            "begin": "(valuetype)\\s+(\\w+)\\s*(.*)\\{",
            "end": "};",
            "beginCaptures": {
                "1": {"name": "storage.type.class.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"},
                "3": {
                    "patterns": [
                        {"include": "#value_inheritance_spec_1"},
                        {"include": "#value_inheritance_spec_2"}
                    ]
                }
            },
            "patterns": [
                {"include": "#block_comments"},
                {"include": "#annotation_comment"},
                {"include": "#single_line_comments"},
                {"include": "#value_element"}
            ]
        },
        "value_inheritance_spec_1": {
            "name": "meta.valuetype.inheritance.omg.idl",
            "begin": "(\\:)\\s+",
            "end": "(\\w+)",
            "beginCaptures": {
                "1": {"name": "storage.modifier.inherits.omg.idl"}
            },
            "patterns": []
        },
        "value_inheritance_spec_2": {
            "patterns": [
                {
                    "match": "\\b(supports)\\b",
                    "name": "storage.modifier.supports.omg.idl"
                }
            ]
        },
        "value_element": {
            "patterns": [
                {"include": "#export"},
                {"include": "#state_member"},
                {"include": "#init_dcl"}
            ]
        },
        "state_member": {
            "name": "meta.state_member.omg.idl",
            "begin": "\\b(public|private)\\b",
            "end": "$",
            "beginCaptures": {
                "1": {"name": "storage.modifier.visibility.omg.idl"}
            },
            "patterns": [
                {"include": "#type_spec"},
                {"include": "#declarator"},
                {"include": "#annotation_comment"}
            ]
        },
        "annotation_appl": {
            "name": "annotation.omg.idl",
            "patterns": [{
                "name": "storage.type.annotation.omg.idl",
                "match": "@\\w+\\s*(\\(.*\\)){0,1}"
            }]
        },
        "interface_def": {
            "name": "meta.storage.interface.omg.idl",
            "begin": "(interface)\\s+(\\w+)\\s*((\\:)\\s+(\\w+)){0,1}\\s*\\{",
            "end": "\\};",
            "beginCaptures": {
                "1": {"name": "storage.type.interface.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"},
                "5": {"name": "entity.name.type.omg.idl"}
            },
            "patterns": [
                {"include": "#interface_body"},
                {"include": "#single_line_comments"},
                {"include": "#block_comments"}
            ]
        },
        "interface_body": {
            "patterns": [
                {"include": "#attr_dcl"},
                {"include": "#op_dcl"}
            ]
        },
        "op_dcl": {
            "name": "meta.storage.operation.omg.idl",
            "begin": "^\\s*((\\w+(<\\d+>){0,1})|\\w+::\\w+)\\s+\n*(\\w+)\\s*\\(",
            "end": "((raises)\\s*\\(\\w+(::\\w+)*\\s*(,\\s*\\w+(::\\w+)*)*\\)){0,1};",
            "beginCaptures": {
                "2": {
                    "patterns": [{"include": "#op_type_spec"}]
                },
                "4": {"name": "entity.name.function.omg.idl"}
            },
            "endCaptures": {
                "2": {
                    "patterns": [{"include": "#raises_keyword"}]
                }
            },
            "patterns": [
                {"include": "#type_spec"},
                {"include": "#parameter_attribute"},
                {"include": "#param_declarator"}]
        },
        "attribute_raises_keyword": {
            "patterns": [{
                "name": "meta.keyword.control.raises.omg.idl",
                "match": "(\\w+){0,1}\\s*\\b(raises|setraises|getraises)\\b",
                "captures": {
                    "1": {"name":"variable.attribute.omg.idl"},
                    "2": {"name": "keyword.control.raises.omg.idl"}
                }
            }]
        },
        "raises_keyword": {
            "patterns": [{
                "name": "keyword.control.raises.omg.idl",
                "match": "\\b(raises|setraises|getraises)\\b"
            }]
        },
        "void_type": {
            "patterns": [{
                "name": "storage.type.primitive.omg.idl",
                "match": "\\b(void)\\b"
            }]
        },
        "op_type_spec": {
            "patterns": [
                {"include": "#void_type"},
                {"include": "#const_type"},
                {"include": "#template_type_spec"}
            ]
        },
        "parameter_attribute": {
            "name": "storage.modifier.attribute.param.omg.idl",
            "match": "(in|out|inout)\\b"
        },
        "param_attribute": {
            "patterns": [{
                "name": "storage.modifier.attribute.param.omg.idl",
                "match": "\\b(in|out|inout)\\b"
            }]
        },
        "param_declarator": {
            "patterns": [{
                "name": "meta.variable.param.omg.idl",
                "match": "\\b(\\w+)\\b(,|\\))",
                "captures": {
                    "1": { "name": "variable.param.omg.idl"}
                }
            }]
        },
        "interface_forward_dcl": {
            "name": "meta.storage.type.interface.omg.idl",
            "match": "\\b(interface)\\b\\s*\\b(\\w+)\\b;",
            "captures": {
                "1": {"name": "storage.type.interface.omg.idl"},
                "2": {"name": "entity.name.type.omg.idl"}
            }
        },
        "simple_declarator": {
            "patterns": [{
                "include": "#identifier"
            }]
        },
        "identifier": {
            "name": "variable.other.omg.idl",
            "match": "\\w+"
        },
        "attr_dcl": {
            "name": "meta.storage.attribute.omg.idl",
            "begin": "\\b(readonly){0,1}\\b\\s*\\b(attribute)\\b",
            "end": "((\\w+)(\\s*,\\s*(\\w+))*){0,1}\\s*;",
            "beginCaptures": {
                "1": { "name": "keyword.control.readonly.omg.idl"},
                "2": { "name": "keyword.control.attribute.omg.idl"}
            },
            "endCaptures": {
                "2": { "name": "variable.attribute.omg.idl"},
                "4": { "name": "variable.attribute.omg.idl"}
            },
            "patterns": [
                {"include": "#type_spec"},
                {"include": "#attribute_raises_keyword"}
            ]
        },
        "except_dcl": {
            "name": "meta.storage.attribute.omg.idl",
            "begin": "\\b(exception)\\s+(\\w+)\\b\\s*{",
            "end": "}",
            "beginCaptures": {
                "1": { "name": "storage.type.exception.omg.idl"},
                "2": { "name": "entity.name.type.omg.idl"}
            },
            "patterns": [
                {"include": "#member"}
            ]
        }
    },
    "scopeName": "source.omg.idl"
}

